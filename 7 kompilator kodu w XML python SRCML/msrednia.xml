<?xml version="1.0" encoding="UTF-8"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="coding.xsd">
	<function>
		<type>
			<name>int</name>
		</type>
		<name>main</name>
		<parameter_list>()</parameter_list>
		<block>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>
						<name>t</name>
						<index>[]</index>
					</name>
					<init>
						<expr>
							<block>
								<expr>
									<literal type="number">2</literal>
								</expr>
								<expr>
									<literal type="number">3</literal>
								</expr>
								<expr>
									<literal type="number">4</literal>
								</expr>
								<expr>
									<literal type="number">3</literal>
								</expr>
								<expr>
									<literal type="number">2</literal>
								</expr>
								<expr>
									<literal type="number">3</literal>
								</expr>
								<expr>
									<literal type="number">4</literal>
								</expr>
								<expr>
									<literal type="number">5</literal>
								</expr>
								<expr>
									<literal type="number">6</literal>
								</expr>
								<expr>
									<literal type="number">4</literal>
								</expr>
								<expr>
									<literal type="number">3</literal>
								</expr>
							</block>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>tlen</name>
					<init>
						<expr>
							<literal type="number">11</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>i</name>
					<init>
						<expr>
							<literal type="number">0</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>double</name>
					</type>
					<name>wynik</name>
					<init>
						<expr>
							<literal type="number">0</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<while>
				<condition>
					<expr>
						<name>i</name>
						<operator>&lt;</operator>
						<name>tlen</name>
					</expr>
				</condition>
				<block>
					<expr_stmt>
						<expr>
							<name>wynik</name>
							<operator>=</operator>
							<name>wynik</name>
							<operator>+</operator>
							<array_name>
								<name>t</name>
								<index>i</index>
							</array_name>
						</expr>
					</expr_stmt>
					<expr_stmt>
						<expr>
							<name>i</name>
							<operator>=</operator>
							<name>i</name>
							<operator>+</operator>
							<literal type="number">1</literal>
						</expr>
					</expr_stmt>
				</block>
			</while>
			<expr_stmt>
				<expr>
					<name>wynik</name>
					<operator>=</operator>
					<name>wynik</name>
					<operator>/</operator>
					<name>tlen</name>
				</expr>
			</expr_stmt>
			<expr_stmt>
				<expr>
					<call>
						<name>wypisz</name>
						<argument_list>
							<argument>
								<expr>
									<name>wynik</name>
								</expr>
							</argument>
						</argument_list>
					</call> 
				</expr>
			</expr_stmt>
		</block>
	</function>
</unit>
<!--
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name><name>t</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">2</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">3</literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>tlen</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>double</name></type> <name>wynik</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<while>while <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>tlen</name></expr>)</condition><block>{
		<expr_stmt><expr><name>wynik</name> <operator>=</operator> <name>wynik</name> <operator>+</operator> <name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>i</name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><name>wynik</name> <operator>=</operator> <name>wynik</name> <operator>/</operator> <name>tlen</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>wypisz</name><argument_list>(<argument><expr><name>wynik</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

}</block></function>

int main() {
	int t[] = {2,3,4,3,2,3,4,5,6,4,3};
	int tlen = 11;
	int i = 0;
	double wynik = 0;
	while (i < tlen){
		wynik = wynik + t[i];
		i=i+1;
	}
	wynik = wynik / tlen;
	wypisz(wynik);

}
-->