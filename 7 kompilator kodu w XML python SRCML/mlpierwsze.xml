<?xml version="1.0" encoding="UTF-8"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="coding.xsd">
	<function>
		<type>
			<name>int</name>
		</type>
		<name>main</name>
		<parameter_list>()</parameter_list>
		<block>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>n</name>
					<init>
						<expr>
							<literal type="number">22</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>i</name>
					<init>
						<expr>
							<literal type="number">0</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>

			<while>
				<condition>
					<expr>
						<name>i</name>
						<operator>&lt;=</operator>
						<name>n</name>
					</expr>
				</condition>
				<block>
					<if>
						<condition>
							<expr>
								<call>
									<name>czy_pierwsza</name>
									<argument_list>
										<argument>
											<expr>
												<name>i</name>
											</expr>
										</argument>
									</argument_list>
								</call>
								<operator>==</operator>
								<name>true</name>
							</expr>
						</condition>
						<then>
							<block>
								<expr_stmt>
									<expr>
										<call>
											<name>wypisz</name>
											<argument_list>
												<argument>
													<expr>
														<name>i</name>
													</expr>
												</argument>
											</argument_list>
										</call>
									</expr>
								</expr_stmt>
							</block>
						</then>
					</if>
					<expr_stmt>
						<expr>
							<name>i</name>
							<operator>=</operator>
							<name>i</name>
							<operator>+</operator>
							<literal type="number">1</literal>
						</expr>
					</expr_stmt>
				</block>
			</while>
			<return>
				<expr>
					<literal type="number">0</literal>
				</expr>
			</return>
		</block>
	</function>
	<function>
		<type>
			<name>bool</name>
		</type>
		<name>czy_pierwsza</name>
		<parameter_list>
			<parameter>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>n</name>
				</decl>
			</parameter>
		</parameter_list>
		<block>
			<if>
				<condition>
					<expr>
						<name>n</name>
						<operator>&lt;</operator>
						<literal type="number">2</literal>
					</expr>
				</condition>
				<then>
					<block type="pseudo">
						<return> 
							<expr>
								<name>false</name>
							</expr>
						</return>
					</block>
				</then>
			</if>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>i</name>
					<init>
						<expr>
							<literal type="number">2</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>ii</name>
					<init>
						<expr>
							<literal type="number">0</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>z</name>
					<init>
						<expr>
							<literal type="number">0</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<expr_stmt>
				<expr>
					<name>ii</name>
					<operator>=</operator>
					<name>i</name>
					<operator>*</operator>
					<name>i</name>
				</expr>
			</expr_stmt>
			<while>
				<condition>
					<expr>
						<name>ii</name>
						<operator>&lt;=</operator>
						<name>n</name>
					</expr>
				</condition>
				<block>
					<expr_stmt>
						<expr>
							<name>z</name>
							<operator>=</operator>
							<name>n</name>
							<operator>%</operator>
							<name>i</name>
						</expr>
					</expr_stmt>
					<if>
						<condition>
							<expr>
								<name>z</name>
								<operator>==</operator>
								<literal type="number">0</literal>
							</expr>
						</condition>
						<then>
							<block type="pseudo">
								<return>
									<expr>
										<name>false</name>
									</expr>
								</return>
							</block>
						</then>
					</if>
					<expr_stmt>
						<expr>
							<name>i</name>
							<operator>=</operator>
							<name>i</name>
							<operator>+</operator>
							<literal type="number">1</literal>
						</expr>
					</expr_stmt>
					<expr_stmt>
						<expr>
							<name>ii</name>
							<operator>=</operator>
							<name>i</name>
							<operator>*</operator>
							<name>i</name>
						</expr>
					</expr_stmt>
				</block>
			</while>
			<return>
				<expr>
					<name>true</name>
				</expr>
			</return>
		</block>
	</function>
</unit>

<!--<function>
		<type>
			<name>int</name>
		</type>
		<name>main</name>
		<parameter_list>()</parameter_list>
		<block>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>n</name>
					<init>
						<expr>
							<literal type="number">10</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>i</name>
					<init>
						<expr>
							<literal type="number">0</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<while>
				<condition>
					<expr>
						<name>i</name>
						<operator>&lt;=</operator>
						<name>n</name>
					</expr>
				</condition>
				<block>
					<if>
						<condition>
							<expr>
								<call>
									<name>czy_pierwsza</name>
									<argument_list>
										<argument>
											<expr>
												<name>i</name>
											</expr>
										</argument>
									</argument_list>
								</call>
							</expr>
						</condition>
						<then>
							<block>
								<expr_stmt>
									<expr>
										<call>
											<name>wypisz</name>
											<argument_list>
												<argument>
													<expr>
														<name>i</name>
													</expr>
												</argument>
											</argument_list>
										</call>
									</expr>
								</expr_stmt>
							</block>
						</then>
					</if>
					<expr_stmt>
						<expr>
							<name>i</name>
							<operator>=</operator> 
							<name>i</name>
							<operator>+</operator>
							<literal type="number">1</literal>
						</expr>
					</expr_stmt>
				</block>
			</while>
			<return>
				<expr>
					<literal type="number">0</literal>
				</expr>
			</return>
		</block>
	</function>
	<function>
		<type>
			<name>bool</name>
		</type>
		<name>czy_pierwsza</name>
		<parameter_list>
			<parameter>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>n</name>
				</decl>
			</parameter>
		</parameter_list>
		<block>
			<if>
				<condition>
					<expr>
						<name>n</name>
						<operator>&lt;</operator>
						<literal type="number">2</literal>
					</expr>
				</condition>
				<then>
					<block type="pseudo">
						<return>
							<expr>
								<name>false</name>
							</expr>
						</return>
					</block>
				</then>
			</if>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>i</name>
					<init>
						<expr>
							<literal type="number">2</literal>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<decl_stmt>
				<decl>
					<type>
						<name>int</name>
					</type>
					<name>ii</name>
					<init>
						<expr>
							<name>i</name>
							<operator>*</operator>
							<name>i</name>
						</expr>
					</init>
				</decl>
			</decl_stmt>
			<while>
				<condition>
					<expr>
						<name>ii</name>
						<operator>&lt;=</operator>
						<name>n</name>
					</expr>
				</condition>
				<block>
					<if>
						<condition>
							<expr>
								<name>n</name>
								<operator>%</operator>
								<name>i</name>
								<operator>==</operator>
								<literal type="number">0</literal>
							</expr>
						</condition>
						<then>
							<block type="pseudo">
								<return>
									<expr>
										<name>false</name>
									</expr>
								</return>
							</block>
						</then>
					</if>
					<expr_stmt>
						<expr>
							<name>i</name>
							<operator>=</operator>
							<name>i</name>
							<operator>+</operator>
							<literal type="number">1</literal>
						</expr>
					</expr_stmt>
					<expr_stmt>
						<expr>
							<name>ii</name>
							<operator>=</operator>
							<name>i</name>
							<operator>*</operator>
							<name>i</name>
						</expr>
					</expr_stmt>
				</block>
			</while>
			<return>
				<expr>
					<name>true</name>
				</expr>
			</return>
		</block>
	</function>
</unit>

<function><type><name>bool</name></type> <name>czy_pierwsza</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>
<block>{
  <if>if<condition>(<expr><name>n</name><operator>&lt;</operator><literal type="number">2</literal></expr>)</condition><then>
    <block type="pseudo"><return>return <expr><name>false</name></expr>;</return></block></then></if>

  <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>ii</name> <init>= <expr><name>i</name> <operator>*</operator> <name>i</name></expr></init></decl>;</decl_stmt>

  <while>while<condition>(<expr><name>ii</name><operator>&lt;=</operator><name>n</name></expr>)</condition><block>{
    <if>if<condition>(<expr><name>n</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
      <block type="pseudo"><return>return <expr><name>false</name></expr>;</return></block></then></if>
    <expr_stmt><expr><name>i</name> <operator>=</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>ii</name> <operator>=</operator> <name>i</name> <operator>*</operator> <name>i</name></expr>;</expr_stmt>
  }</block></while>
  <return>return <expr><name>true</name></expr>;</return>
}</block></function>
 
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
  <decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><literal type="number">100</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  
<while>while<condition>(<expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>)</condition><block>{
  	<if>if<condition>(<expr><call><name>czy_pierwsza</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition><then><block>{
  		<expr_stmt><expr><call><name>wypisz</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name>i</name> <operator>=</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
  }</block></while>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
#include<iostream>
#include<cstdlib>
using namespace std;
 
bool czy_pierwsza(int n)
{
  if(n<2)
    return false;

  int i = 2;
  int ii = i * i;

  while(ii<=n){
    if(n%i==0)
      return false;
    i = i + 1;
	ii = i * i;
  }
  return true;
}
 
int main()
{
  int n = 100;
  int i = 0;
  
  while(i <= n){
  	if(czy_pierwsza(i)){
  		cout<<"Liczba "<<i<<" jest pierwsza"<<endl;
	}
	i = i + 1;
  }
  return 0;
}
-->